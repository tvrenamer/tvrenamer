<?xml version="1.0"?>
<!DOCTYPE module PUBLIC "-//Puppy Crawl//DTD Check Configuration 1.3//EN" "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<module name = "Checker">
    <property name="charset" value="UTF-8"/>

    <property name="severity" value="warning"/>

    <property name="fileExtensions" value="java, properties, xml"/>
        <module name="FileTabCharacter">
            <property name="eachLine" value="true"/>
        </module>

    <module name="SuppressionCommentFilter">
        <property name="offCommentFormat" value="BEGIN IGNORE STYLE"/>
        <property name="onCommentFormat" value="END IGNORE STYLE"/>
    </module>
    <module name="RegexpSingleline">
        <!-- \s matches whitespace character, $ matches end of line. -->
        <property name="format" value="\s+$"/>
    </module>
    <module name="TreeWalker">
        <module name="SingleLineJavadoc">
            <property name="ignoreInlineTags" value="false"/>
        </module>
        <module name="FileContentsHolder"/>
        <module name="OuterTypeFilename"/>
        <module name="LineLength">
            <property name="max" value="212"/>
        </module>
        <module name="MethodLength">
            <property name="max" value="175"/>
        </module>
        <module name="OneTopLevelClass"/>
        <module name="NoLineWrap"/>
        <module name="EmptyBlock">
            <property name="option" value="TEXT"/>
            <property name="tokens" value="LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH"/>
        </module>
        <module name="NeedBraces">
          <property name="allowSingleLineStatement" value="true"/>
        </module>
        <module name="LeftCurly">
            <property name="option" value="nlow"/>
            <property name="maxLineLength" value="100"/>
        </module>
        <module name="RightCurly"/>
        <module name="RightCurly">
            <property name="option" value="alone"/>
            <property name="tokens" value="CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, LITERAL_DO, STATIC_INIT, INSTANCE_INIT"/>
        </module>
        <module name="WhitespaceAround">
          <!-- ASSIGN, -->
          <!-- LT, -->
            <property name="tokens" value="LITERAL_ASSERT,
                                           LITERAL_CATCH,
                                           LITERAL_DO,
                                           LITERAL_ELSE,
                                           LITERAL_FINALLY,
                                           LITERAL_FOR,
                                           LITERAL_IF,
                                           LITERAL_RETURN,
                                           LITERAL_SWITCH,
                                           LITERAL_SYNCHRONIZED,
                                           LITERAL_TRY,
                                           LITERAL_WHILE,
                                           BAND_ASSIGN,
                                           BOR_ASSIGN,
                                           BSR_ASSIGN,
                                           BXOR_ASSIGN,
                                           DIV_ASSIGN,
                                           MINUS_ASSIGN,
                                           MOD_ASSIGN,
                                           PLUS_ASSIGN,
                                           SL_ASSIGN,
                                           SR_ASSIGN,
                                           STAR_ASSIGN,
                                           LE,
                                           GT,
                                           GE,
                                           NOT_EQUAL,
                                           BAND,
                                           BOR,
                                           BSR,
                                           BXOR,
                                           COLON,
                                           DIV,
                                           DO_WHILE,
                                           EQUAL,
                                           LAND,
                                           LCURLY,
                                           LOR,
                                           MINUS,
                                           MOD,
                                           PLUS,
                                           QUESTION,
                                           RCURLY,
                                           SL,
                                           SLIST,
                                           SR,
                                           STAR,
                                           TYPE_EXTENSION_AND"/>
            <message key="ws.notFollowed"
             value="WhitespaceAround: ''{0}'' is not followed by whitespace. Empty blocks may only be represented as '{}' when not part of a multi-block statement (4.1.3)"/>
             <message key="ws.notPreceded"
             value="WhitespaceAround: ''{0}'' is not preceded with whitespace."/>
        </module>
        <module name="OneStatementPerLine"/>
        <module name="MultipleVariableDeclarations"/>
        <module name="ArrayTypeStyle"/>
        <module name="FallThrough"/>
        <module name="UpperEll"/>
        <module name="ModifierOrder"/>
        <module name="EmptyLineSeparator">
            <property name="allowNoEmptyLineBetweenFields" value="true"/>
        </module>
        <module name="SeparatorWrap">
            <property name="tokens" value="DOT"/>
            <property name="option" value="nl"/>
        </module>
        <module name="SeparatorWrap">
            <property name="tokens" value="COMMA"/>
            <property name="option" value="EOL"/>
        </module>
        <module name="PackageName">
            <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
            <message key="name.invalidPattern"
             value="Package name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="TypeName">
            <message key="name.invalidPattern"
             value="Type name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="MemberName">
            <property name="format" value="^([a-z][a-z0-9]|m)[a-zA-Z0-9]*$"/>
            <message key="name.invalidPattern"
             value="Member name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="LocalVariableName">
            <property name="tokens" value="VARIABLE_DEF"/>
            <property name="format" value="^[a-z][a-zA-Z0-9]*$"/>
            <property name="allowOneCharVarInForLoop" value="true"/>
            <message key="name.invalidPattern"
             value="Local variable name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="ClassTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
            <message key="name.invalidPattern"
             value="Class type name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="MethodTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)"/>
            <message key="name.invalidPattern"
             value="Method type name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="NoFinalizer"/>
        <module name="GenericWhitespace">
            <message key="ws.followed"
             value="GenericWhitespace ''{0}'' is followed by whitespace."/>
             <message key="ws.preceded"
             value="GenericWhitespace ''{0}'' is preceded with whitespace."/>
             <message key="ws.illegalFollow"
             value="GenericWhitespace ''{0}'' should followed by whitespace."/>
             <message key="ws.notPreceded"
             value="GenericWhitespace ''{0}'' is not preceded with whitespace."/>
        </module>
        <module name="Indentation">
            <property name="basicOffset" value="4"/>
            <property name="braceAdjustment" value="0"/>
            <property name="caseIndent" value="4"/>
            <property name="throwsIndent" value="4"/>
            <property name="lineWrappingIndentation" value="4"/>
            <property name="arrayInitIndent" value="8"/>
        </module>
        <module name="UnusedImports"/>
        <module name="CustomImportOrder">
            <property name="sortImportsInGroupAlphabetically" value="true"/>
            <property name="customImportOrderRules" value="STATIC###THIRD_PARTY_PACKAGE###STANDARD_JAVA_PACKAGE"/>
        </module>
        <module name="MethodParamPad">
          <property name="option" value="nospace"/>
          <property name="tokens" value="METHOD_CALL, LITERAL_NEW, SUPER_CTOR_CALL, METHOD_DEF, CTOR_DEF"/>
        </module>
        <module name="ParenPad">
          <property name="option" value="nospace"/>
          <property name="tokens" value="METHOD_CALL, LITERAL_NEW, SUPER_CTOR_CALL, METHOD_DEF, CTOR_DEF"/>
        </module>
        <module name="OperatorWrap">
            <property name="option" value="NL"/>
            <property name="tokens" value="PLUS, BOR, BAND, QUESTION, COLON"/>
        </module>
        <!-- LOR, LAND -->
        <module name="OperatorWrap">
            <property name="option" value="EOL"/>
            <property name="tokens" value="BSR, BXOR, DIV, EQUAL, GE, GT, LE, LITERAL_INSTANCEOF, LT, MINUS, MOD, NOT_EQUAL, SL, SR, STAR "/>
        </module>
        <module name="AnnotationLocation">
            <property name="tokens" value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF"/>
        </module>
        <module name="AnnotationLocation">
            <property name="tokens" value="VARIABLE_DEF"/>
            <property name="allowSamelineMultipleAnnotations" value="true"/>
        </module>
        <module name="MethodName">
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9_]*$"/>
            <message key="name.invalidPattern"
             value="Method name ''{0}'' must match pattern ''{1}''."/>
        </module>
        <module name="EmptyCatchBlock">
            <property name="exceptionVariableName" value="ignored"/>
        </module>
    </module>
</module>
